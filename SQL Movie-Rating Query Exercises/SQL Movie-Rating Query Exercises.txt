
SQL Movie-Rating Query Exercises

1. SELECT title
   FROM Movie
   WHERE director = 'Steven Spielberg'

2. SELECT DISTINCT m.year
   FROM Movie AS m
   JOIN Rating AS r
   ON m.mID = r.mID
   WHERE r.stars >= 4
   ORDER BY m.year

3. SELECT title 
   FROM Movie
   WHERE Movie.mID NOT IN (SELECT mID FROM Rating)

4. SELECT name 
   FROM Reviewer 
   WHERE rID IN (SELECT rID FROM Rating WHERE ratingDate IS null)

5. SELECT Reviewer.name,Movie.title, Rating.stars, Rating.ratingDate
   FROM Rating
   JOIN Movie, Reviewer
   ON Rating.rID = Reviewer.rID AND Rating.mID = Movie.mID
   ORDER BY 1,2,3

6. SELECT Reviewer.name, Movie.title
   FROM Reviewer, Movie,
   (SELECT R1.rID, R1.mID 
   FROM Rating R1, Rating R2 
   WHERE R1.rID=R2.rID AND R1.mID=R2.mID AND R2.ratingDate>R1.ratingDate
   AND R2.stars > R1.stars) AS comp
   WHERE Reviewer.rID = comp.rID AND Movie.mID = comp.mID

7. SELECT Movie.title, MAX(stars)   
   FROM Rating
   JOIN Movie
   ON Rating.mID = Movie.mID
   GROUP BY 1
   ORDER BY 1

8. SELECT Movie.title, MAX(stars) - MIN(stars) AS spread  
   FROM Rating
   JOIN Movie
   ON Rating.mID = Movie.mID
   GROUP BY 1
   ORDER BY 2 DESC, 1

9. SELECT MAX(total_avg) - MIN(total_avg)
   FROM (SELECT CASE WHEN sub.before_after = 'yes' THEN AVG(sub.avg_stars) ELSE AVG(sub.avg_stars) END AS total_avg
   FROM (SELECT Movie.title, AVG(Rating.stars) as avg_stars,Movie.year,
   CASE WHEN year > 1980 THEN 'yes' ELSE 'no' END as before_after
   FROM Movie JOIN Rating ON Movie.mID = Rating.mID GROUP BY 1) sub
   GROUP BY before_after)